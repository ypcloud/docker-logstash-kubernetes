filter {
  if "kubernetes" and "audit" in [tags] {
    # Splitting original message to get access to event timestamp.
    mutate {
      split => { 
        "message" => " " 
      }
    }

    # Extract timestamp of the acutal event and overwrite @timestamp
    date {
      match => [ "[message][0]", "ISO8601"]
    }

    # Extract event key-values
    kv {
      field_split => " "
      value_split => "="
      target => "message"
    }

    # If URI present
    if [message][uri] {
      # Decode endpoint URL
      urldecode {
        field => "[message][uri]"
      }
      
      # Temporarily split URI into endpoint / query_string parts
      mutate {
        split => { 
          "[message][uri]" => "?"
        }
      }

      # If query_string exists split them into KV pairs
      if [message][uri][1] {
        kv {
          source => "[message][uri][1]"
          target => "[message][query_params]"
          field_split => "&"
          value_split => "="
          add_field => { "[message][endpoint]" => "%{[message][uri][0]}" }
          remove_field => "[message][uri]"
          allow_duplicate_values => false
        }
      } else if [message][uri][0] { # No query_string present
        mutate {
          add_field => { "[message][endpoint]" => "%{[message][uri][0]}" }
          remove_field => "[message][uri]"
        }        
      }
    }

    # Rename field to prevent conflicts with other document types
    mutate {
      rename => { "message" => "audit" }
      add_tag => ["kubernetes_audit_filtered"]
    }
  }
}

output {
  if "kubernetes_audit_filtered" in [tags] {
    amazon_es {
        hosts => ["%ELASTICSEARCH_HOST%"]
        region => "us-east-1"
        aws_access_key_id => '${AWS_ACCESS_KEY_ID}'
        aws_secret_access_key => '${AWS_SECRET_ACCESS_KEY}'
        document_type => "audit"
        index => "cldaudit-%{[kubernetes][namespace_name]}-%{[meta][cloud][provider]}-%{+YYYY.MM.dd}"
        idle_flush_time => %ELASTICSEARCH_IDLE_FLUSH_TIME%
        flush_size => %ELASTICSEARCH_FLUSH_SIZE%
    }
  }
}

